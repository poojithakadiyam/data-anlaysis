# -*- coding: utf-8 -*-
"""Project2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CPune23OD8Ytl9w23KZuzoD4MAAviRvJ
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split as ttp
from sklearn.metrics import classification_report
import re
import string
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
data=pd.read_csv("/content/heart.csv")
data.head()

data1_manual_testing = data.head(10)
for i in range(2,12,1):
  data.drop([i],axis=0, inplace=True)
  data2_manual_testing = data.tail(10)
for i in range(302,292,-1):
  data.drop([i],axis=0, inplace=True)
manual_testing = pd.concat([data1_manual_testing,data2_manual_testing], axis=0)
manual_testing.to_csv("manual_testing.csv")

x=data["age"]
y=data["output"]
x_train,x_test,y_train,y_test=ttp(x,y,test_size=0.25,random_state=0)
x_train = pd.DataFrame(x_train)
y_train = pd.DataFrame(y_train)
x_train.shape

if x_train.shape[1]==1:
  x_train=x_train.values.reshape(-1,1)
print(type(x_test))

x_test = x_test.values.reshape(-1, 1)

from sklearn.linear_model import LogisticRegression
LR=LogisticRegression()
LR.fit(x_train,y_train)
accuracy = LR.score(x_test,y_test).round(2)
print("Accuracy is" , accuracy)
pred_LR= LR.predict(x_test)
print(classification_report(y_test,pred_LR))

from sklearn.metrics import confusion_matrix
cm= confusion_matrix(y_test,pred_LR)
print(cm)
import seaborn as sns
sns.heatmap(cm,cmap="BuPu",annot=True)

LR=LinearRegression()
a=LR.fit(x_train,y_train)
print(a)
l=LR.predict(x_test)
plt.plot(x_test,l,linewidth='3',color='black')
plt.show()